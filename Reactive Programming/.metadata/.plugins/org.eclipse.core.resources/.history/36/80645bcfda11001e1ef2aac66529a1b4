package org.javacoders.test;

import java.time.Duration;

import org.junit.jupiter.api.Test;

import reactor.core.publisher.Flux;
import reactor.test.StepVerifier;
import reactor.test.StepVerifier.Step;

public class Lec05VirtualTimeTest {
	
	@Test
	public void test1() {
		StepVerifier.withVirtualTime(() -> timeConsumingFlux())
			.thenAwait(Duration.ofSeconds(30))
			.expectNext("1a", "2a", "3a", "4a")
			.verifyComplete();
	}
	
	@Test
	public void test2() {
		StepVerifier.withVirtualTime(() -> timeConsumingFlux())
			.thenAwait(Duration.ofSeconds(30))
			.expectNext("1a", "2a", "3a", "4a")
			.verifyComplete();
	}
	
	.expectSubscription() // sub is an even
	.expectNoEvent(Duration.ofSeconds(4))
	
	private Flux<String> timeConsumingFlux(){
		return Flux.range(1, 4)
				.delayElements(Duration.ofSeconds(5))
				.map(i -> i+"a");
	}
	
	

}
